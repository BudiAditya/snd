<?php
/**
 * This class will encapsulate all native sql driver method call.
 * This class wil act as result set or record reader generated by query() call
 *	NOTE: query() may vary depend on native driver implementation
 *
 * Class usage: generally for data retrieval only!
 */
abstract class ReaderBase extends ObjectExtended {
	/**
	 * This property will return native object (resource link) of specific driver type
	 *
	 * @var array
	 */
	protected  $NativeReader = array("Type" => "r");
	protected  $NumRows = array("Type" => "r");
	protected  $FieldCount = array("Type" => "r");
	protected  $CurrentField = array("Type" => "r");

	protected $nativeReader;

	// START - Property Accessor method(s)
	public function GetNativeReader() {
		return $this->nativeReader;
	}

	/**
	 * Should return total rows of current reader / result set
	 *
	 * @abstract
	 * @return int
	 */
	public abstract function GetNumRows();

	/**
	 * Should return total field / column of current reader / result set
	 *
	 * @abstract
	 * @return int
	 */
	public abstract function GetFieldCount();

	/**
	 * Should return field cursor position
	 *
	 * @abstract
	 * @return int
	 */
	public abstract function GetCurrentField();
	// END - Property Accessor method(s)

	public function __construct($reader) {
		$this->nativeReader = $reader;
	}

	/**
	 * Fetching current row into index based + associative array and move reader cursor forward
	 *
	 * @abstract
	 * @return array
	 */
	public abstract function FetchArray();

	/**
	 * Fetching current row into index based array and move reader cursor forward
	 *
	 * @abstract
	 * @return array
	 */
	public abstract function FetchRow();

	/**
	 * Fetching current row into associative array and move reader cursor forward
	 *
	 * @abstract
	 * @return array
	 */
	public abstract function FetchAssoc();

	/**
	 * Fetching current row into anonymous class object and move reader cursor forward
	 *
	 * @abstract
	 * @return mixed
	 */
	public abstract function FetchObject();

	/**
	 * Fetching current field / column data. Result array may vary depend on native driver implementation
	 *
	 * @abstract
	 * @return array
	 */
	public abstract function FetchField();

	/**
	 * Closing current reader and free memory usage
	 *
	 * @abstract
	 * @return void
	 */
	public abstract function CloseReader();

	// These function(s) are for backward compatibility only. Usage are discourage
	/**
	 * Alias for FetchArray()
	 *
	 * @deprecated
	 * @return array
	 */
	public function fetch_array() {
		return $this->FetchArray();
	}

	/**
	 * Alias for FetchRow()
	 *
	 * @deprecated
	 * @return array
	 */
	public function fetch_row() {
		return $this->FetchRow();
	}

	/**
	 * Alias for FetchAssoc()
	 *
	 * @deprecated
	 * @return array
	 */
	public function fetch_assoc() {
		return $this->FetchAssoc();
	}

	/**
	 * Alias for FetchObject()
	 *
	 * @deprecated
	 * @return array
	 */
	public function fetch_object() {
		return $this->FetchObject();
	}

	/**
	 * Alias for FetchField()
	 *
	 * @deprecated
	 * @return array
	 */
	public function fetch_field() {
		return $this->FetchField();
	}

	/**
	 * This method is alias for NumRows property.
	 * I create this method for shitty Code Igniter based framework
	 *
	 * @deprecated
	 * @return int
	 */
	public function num_rows() {
		return $this->GetNumRows();
	}
}

// EOF: ./system/core/connector/reader_base.php
